apply plugin: 'com.android.application'
apply plugin: 'io.fabric'



android {
    compileSdkVersion rootProject.ext.targetSdkVersion

    defaultConfig {
        applicationId "org.grameen.fdp.kasapin"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        buildConfigField 'boolean', 'ENABLE_CRASHLYTICS', 'true'
        buildConfigField "String", "END_POINT", "\"http://104.236.220.225/\""

    }


    signingConfigs {
        release {
            storeFile file("fdp-kasapin.jks")
            storePassword "sirrius"
            keyAlias "fdp-kasapin"
            keyPassword "sirrius"
        }
    }


    buildTypes {

        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField("String", "BASE_URL", "\"http://www.fdp.io/v2\"")
            buildConfigField("String", "API_KEY", "prod")

        }

        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            debuggable true
            useProguard false
            //buildConfigField("String", "API_KEY", "testkey")
            buildConfigField 'boolean', 'ENABLE_CRASHLYTICS', 'false'
            buildConfigField "String", "END_POINT", "\"http://104.236.220.225/\""


        }
    }




    /*        productFlavors {
            internal {
                applicationId "$appPackageId" + ".internal"
                versionName "i$appVersionName"
            }

            production {
                applicationId "$appPackageId"
                versionName "$appVersionName"
            }
        }
    }*/




        lintOptions {
            checkReleaseBuilds true
            // Or, if you prefer, you can continue to check for errors in release builds,
            // but continue the build even when errors are found:
            abortOnError false
        }


        allprojects {
            repositories {
                maven { url 'https://jitpack.io' }

                jcenter()

                maven { url "https://maven.google.com" }
            }
        }


        packagingOptions {
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/NOTICE'
        }



    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

    }


        dependencies {
            implementation fileTree(dir: 'libs', include: ['*.jar'])
            implementation "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"
            implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
            implementation "com.android.support:design:$rootProject.ext.supportLibraryVersion"
            implementation "com.android.support:cardview-v7:$rootProject.ext.supportLibraryVersion"
            implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
            implementation "com.android.support:support-vector-drawable:$rootProject.supportLibraryVersion"
            implementation "com.android.support:animated-vector-drawable:$rootProject.supportLibraryVersion"
            implementation "com.android.support:preference-v7:$rootProject.supportLibraryVersion"
            implementation "com.android.support:percent:$rootProject.ext.supportLibraryVersion"
            implementation "com.google.android.gms:play-services-maps:$rootProject.ext.mapsVersion"
            implementation "com.google.android.gms:play-services-location:$rootProject.ext.mapsVersion"

            implementation "com.android.support:gridlayout-v7:$rootProject.ext.supportLibraryVersion"


            //Network
            implementation ("com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"){
                exclude module: 'okhttp'
            }

            implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.retrofitVersion"
            implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"
            implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.loggingInterceptorVersion"


            //ReactiveX
            implementation "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rxandroidVersion"
            implementation "io.reactivex.rxjava2:rxjava:$rootProject.ext.rxjava2Version"


            //Serialization
            implementation "com.squareup.moshi:moshi:$rootProject.ext.moshiVersion"


            //firebase
            implementation "com.google.firebase:firebase-core:$rootProject.ext.firebaseVersion"
            implementation "com.crashlytics.sdk.android:crashlytics:$rootProject.ext.crashyticsVersion"


            // room database
            implementation "android.arch.persistence.room:rxjava2:$rootProject.ext.roomVersion"
            implementation "android.arch.persistence.room:runtime:$rootProject.ext.roomVersion"
            annotationProcessor "android.arch.persistence.room:compiler:$rootProject.ext.roomVersion"


            //SmartTab
            implementation "com.ogaclejapan.smarttablayout:library:$rootProject.ext.smartTabVersion"
            implementation "com.ogaclejapan.smarttablayout:utils-v4:$rootProject.ext.smartTabVersion"

            // debug database
            debugImplementation "com.amitshekhar.android:debug-db:$rootProject.ext.debugDBVersion"

            // dagger dependency injection
            implementation "com.google.dagger:dagger:$rootProject.ext.dagger2Version"
            annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.dagger2Version"
            implementation "com.google.dagger:dagger-android-support:$rootProject.ext.dagger2Version"

            // compileOnly 'javax.annotation:jsr250-api:1.0'
            //implementation 'javax.inject:javax.inject:1'

            // butterknife code generator for view
            implementation "com.jakewharton:butterknife:$rootProject.ext.butterKnifeVersion"
            annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.ext.butterKnifeVersion"

            //Material Search View
            implementation "com.github.mirrajabi:search-dialog:$rootProject.ext.materialSearchDialogVersion"

            //Custom Material views
            implementation 'com.rengwuxian.materialedittext:library:2.1.4'
            implementation 'com.jaredrummler:material-spinner:1.2.1'

            //Circle imageView
            implementation 'de.hdodenhof:circleimageview:2.1.0'

            //Pretty time
            implementation 'org.ocpsoft.prettytime:prettytime:4.0.1.Final'

            //Table views
            implementation 'com.evrencoskun.library:tableview:0.8.6'
            implementation 'de.codecrafters.tableview:tableview:2.8.0'

            //Rhino
            implementation "io.apisense:rhino-android:$rootProject.ext.rhinoVersion"

            //Spotlight for app intro
            implementation 'com.github.wooplr:Spotlight:1.2.3'

            // logger
            implementation "com.jakewharton.timber:timber:$rootProject.ext.timberVersion"
            implementation "com.balsikandar.android:crashreporter:$rootProject.ext.crashReporterVersion"

            // dependencies for local unit tests
            testImplementation "junit:junit:$rootProject.ext.junitVersion"
            testImplementation "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
            testAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.dagger2Version"

            // UI Testing
            androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
            androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.ext.espressoVersion"
            androidTestImplementation "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
            androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.dagger2Version"

            //Permissions
            implementation "com.github.karanchuri:PermissionManager:$rootProject.ext.permissionManager"
            implementation 'com.android.support:exifinterface:28.0.0'

            implementation 'com.google.maps.android:android-maps-utils:0.5+'


        }


        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                def formattedDate = new Date().format('ddMMM')
                def newApkName = "FDP-kasapin" + variant.versionName + "@" + formattedDate + ".apk"

                outputFileName = new File(variant.name, newApkName)

            }
        }
    }


apply plugin: 'com.google.gms.google-services'

